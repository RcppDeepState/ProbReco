// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// energy_i
Rcpp::List energy_i(Rcpp::NumericMatrix Sin, Rcpp::NumericVector yin, Rcpp::NumericVector xin, Rcpp::NumericVector xsin, Rcpp::NumericVector Gin);
RcppExport SEXP _ProbReco_energy_i(SEXP SinSEXP, SEXP yinSEXP, SEXP xinSEXP, SEXP xsinSEXP, SEXP GinSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type Sin(SinSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type yin(yinSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type xin(xinSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type xsin(xsinSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type Gin(GinSEXP);
    rcpp_result_gen = Rcpp::wrap(energy_i(Sin, yin, xin, xsin, Gin));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ProbReco_energy_i", (DL_FUNC) &_ProbReco_energy_i, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_ProbReco(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sga.R
\name{opt_G}
\alias{opt_G}
\title{Find optimal G using Stochastic Gradient Ascent}
\usage{
opt_G(S, data, prob, Q = 500, eta = 0.1, beta1 = 0.9,
  beta2 = 0.999, maxIter = 500, tol = rep(0.1, ncol(S)),
  epsilon = 1e-08, Ginit = as.vector(solve(t(S) \%*\% S, t(S))))
}
\arguments{
\item{S}{Matrix encoding linear constraints.}

\item{data}{Data realisations as vector in a list.}

\item{prob}{Functions to simulate from probabilistic forecast (in a list).}

\item{Q}{number of draws for each time period}

\item{eta}{Step size}

\item{beta1}{Forgetting rate for mean}

\item{beta2}{Forgetting rate for variance}

\item{maxIter}{Maximum number of Iterations}

\item{tol}{Tolerance for stopping criterion}

\item{epsilon}{small constant added to denominator of step size}

\item{Ginit}{Initial value of G}
}
\description{
Find optimal G using Stochastic Gradient Ascent
}
\examples{
 
library(purrr)
S<-matrix(c(1,1,1,0,0,1),3,2, byrow = TRUE)
data<-map(1:100,function(i){S\%*\%rnorm(2)})
prob<-map(1:100,function(i){f<-function(){rnorm(3)}})
opt_G(S,data,prob)
}

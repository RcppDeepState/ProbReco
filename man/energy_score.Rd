% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sga.R
\name{energy_score}
\alias{energy_score}
\title{Total energy score (and gradient) for reconciled forecast}
\usage{
energy_score(data, prob, S, Gvec, Q = 500)
}
\arguments{
\item{data}{Past data realisations as vectors in a list.  Each list element corresponds to a period of training data.}

\item{prob}{Functions to simulate from probabilistic forecast in a list.  Each list element corresponds to a period of training data.}

\item{S}{Matrix encoding linear constraints.}

\item{Gvec}{Reconciliation parameters \eqn{d} and \eqn{G} where \eqn{\tilde{y}=d+SG\hat{y}}.  The first \eqn{n} elements correspond to translation vector \eqn{d}, while the remaining elements correspond to the matrix \eqn{G} where the elements are filled in column-major order.}

\item{Q}{Number of draws for each time period used to estimate energy score. Default is 500.}
}
\value{
Total energy score and gradient w.r.t G.
\item{grad}{The estimate of the gradient.}
\item{value}{The estimated total energy score.}
}
\description{
Function to find an estimate of the total energy score for a linearly reconciled 
probabilistic forecast.  Also funds the gradient by automatic differentiation.
}
\examples{
#Use purr library to setup
library(purrr)
#Define S matrix
S<-matrix(c(1,1,1,0,0,1),3,2, byrow = TRUE)
#Randomly set a value of reconciliation parameters 
Gvec<-as.matrix(runif(8))
#Set data (only 10 training observations used for speed)
data<-map(1:10,function(i){S\%*\%(c(1,1)+rnorm(2))})
#Set list of functions generating from probabilistic forecast
prob<-map(1:10,function(i){f<-function(){rnorm(3)}})
#Compute energy_score
out<-energy_score(data,prob,S,Gvec)
}
\seealso{
Other ProbReco functions: \code{\link{scoreopt.control}},
  \code{\link{scoreopt}}
}
\concept{ProbReco functions}
